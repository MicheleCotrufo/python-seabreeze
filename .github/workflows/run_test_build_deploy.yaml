name: test build deploy

on:
  push:
    branches:
      - main
    tags:
      - v*.*.*
  pull_request: {}

jobs:
  tests:
    name: Run py ${{ matrix.python-version }} tests
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup libusb-dev
        run: |
          sudo apt-get install -y libusb-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[pyseabreeze,tests]
      - name: Test with pytest
        run: |
          pytest

  build_sdist:
    name: Build sdist on Linux
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Setup libusb-dev
        run: |
          sudo apt-get install -y libusb-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Install build
        run: python -m pip install build --user
      - name: Build the source tarball
        run: python -m build --sdist .
      - uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: ./dist

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: [tests]
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel
      - name: Build wheels
        env:
          SEABREEZE_DISABLE_FH4: "yes"
        run: python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  deploy_pypi:
    name: deploy to pypi
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: sdist
          path: ./dist
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: ./dist
      # push all tagged versions to pypi.org
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
